<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/credentials.proto

namespace Keboola\StorageDriver\Credentials\GenericBackendCredentials;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>keboola.storageDriver.credentials.GenericBackendCredentials.SynapseCredentialsMeta</code>
 */
class SynapseCredentialsMeta extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string database = 1;</code>
     */
    protected $database = '';
    /**
     * Generated from protobuf field <code>bool useManagedIdentity = 2;</code>
     */
    protected $useManagedIdentity = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $database
     *     @type bool $useManagedIdentity
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Credentials::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string database = 1;</code>
     * @return string
     */
    public function getDatabase()
    {
        return $this->database;
    }

    /**
     * Generated from protobuf field <code>string database = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDatabase($var)
    {
        GPBUtil::checkString($var, True);
        $this->database = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool useManagedIdentity = 2;</code>
     * @return bool
     */
    public function getUseManagedIdentity()
    {
        return $this->useManagedIdentity;
    }

    /**
     * Generated from protobuf field <code>bool useManagedIdentity = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setUseManagedIdentity($var)
    {
        GPBUtil::checkBool($var);
        $this->useManagedIdentity = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SynapseCredentialsMeta::class, \Keboola\StorageDriver\Credentials\GenericBackendCredentials_SynapseCredentialsMeta::class);

