<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/workspace.proto

namespace Keboola\StorageDriver\Command\Workspace;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * Command will remove workspace content
 *
 * Generated from protobuf message <code>keboola.storageDriver.command.workspace.ClearWorkspaceCommand</code>
 */
class ClearWorkspaceCommand extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string workspaceObjectName = 1;</code>
     */
    protected $workspaceObjectName = '';
    /**
     * Generated from protobuf field <code>bool ignoreErrors = 2;</code>
     */
    protected $ignoreErrors = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $workspaceObjectName
     *     @type bool $ignoreErrors
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Workspace::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string workspaceObjectName = 1;</code>
     * @return string
     */
    public function getWorkspaceObjectName()
    {
        return $this->workspaceObjectName;
    }

    /**
     * Generated from protobuf field <code>string workspaceObjectName = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setWorkspaceObjectName($var)
    {
        GPBUtil::checkString($var, True);
        $this->workspaceObjectName = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool ignoreErrors = 2;</code>
     * @return bool
     */
    public function getIgnoreErrors()
    {
        return $this->ignoreErrors;
    }

    /**
     * Generated from protobuf field <code>bool ignoreErrors = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIgnoreErrors($var)
    {
        GPBUtil::checkBool($var);
        $this->ignoreErrors = $var;

        return $this;
    }

}

