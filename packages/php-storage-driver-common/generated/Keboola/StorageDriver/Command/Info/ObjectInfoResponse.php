<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/info.proto

namespace Keboola\StorageDriver\Command\Info;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>keboola.storageDriver.command.info.ObjectInfoResponse</code>
 */
class ObjectInfoResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated string path = 1;</code>
     */
    private $path;
    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.ObjectType objectType = 2;</code>
     */
    protected $objectType = 0;
    protected $objectReflection;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $path
     *     @type int $objectType
     *     @type \Keboola\StorageDriver\Command\Info\DatabaseReflection $databaseReflection
     *     @type \Keboola\StorageDriver\Command\Info\SchemaReflection $schemaReflection
     *     @type \Keboola\StorageDriver\Command\Info\ViewReflection $viewReflection
     *     @type \Keboola\StorageDriver\Command\Info\TableReflection $tableReflection
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Info::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated string path = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Generated from protobuf field <code>repeated string path = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPath($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->path = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.ObjectType objectType = 2;</code>
     * @return int
     */
    public function getObjectType()
    {
        return $this->objectType;
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.ObjectType objectType = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setObjectType($var)
    {
        GPBUtil::checkEnum($var, \Keboola\StorageDriver\Command\Info\ObjectType::class);
        $this->objectType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.DatabaseReflection databaseReflection = 3;</code>
     * @return \Keboola\StorageDriver\Command\Info\DatabaseReflection|null
     */
    public function getDatabaseReflection()
    {
        return $this->readOneof(3);
    }

    public function hasDatabaseReflection()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.DatabaseReflection databaseReflection = 3;</code>
     * @param \Keboola\StorageDriver\Command\Info\DatabaseReflection $var
     * @return $this
     */
    public function setDatabaseReflection($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Info\DatabaseReflection::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.SchemaReflection schemaReflection = 4;</code>
     * @return \Keboola\StorageDriver\Command\Info\SchemaReflection|null
     */
    public function getSchemaReflection()
    {
        return $this->readOneof(4);
    }

    public function hasSchemaReflection()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.SchemaReflection schemaReflection = 4;</code>
     * @param \Keboola\StorageDriver\Command\Info\SchemaReflection $var
     * @return $this
     */
    public function setSchemaReflection($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Info\SchemaReflection::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.ViewReflection viewReflection = 5;</code>
     * @return \Keboola\StorageDriver\Command\Info\ViewReflection|null
     */
    public function getViewReflection()
    {
        return $this->readOneof(5);
    }

    public function hasViewReflection()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.ViewReflection viewReflection = 5;</code>
     * @param \Keboola\StorageDriver\Command\Info\ViewReflection $var
     * @return $this
     */
    public function setViewReflection($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Info\ViewReflection::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.TableReflection tableReflection = 6;</code>
     * @return \Keboola\StorageDriver\Command\Info\TableReflection|null
     */
    public function getTableReflection()
    {
        return $this->readOneof(6);
    }

    public function hasTableReflection()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.info.TableReflection tableReflection = 6;</code>
     * @param \Keboola\StorageDriver\Command\Info\TableReflection $var
     * @return $this
     */
    public function setTableReflection($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Info\TableReflection::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getObjectReflection()
    {
        return $this->whichOneof("objectReflection");
    }

}

