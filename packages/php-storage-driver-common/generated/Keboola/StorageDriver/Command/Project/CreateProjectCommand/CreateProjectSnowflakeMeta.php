<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/project.proto

namespace Keboola\StorageDriver\Command\Project\CreateProjectCommand;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * Snowflake backend metadata
 *
 * Generated from protobuf message <code>keboola.storageDriver.command.project.CreateProjectCommand.CreateProjectSnowflakeMeta</code>
 */
class CreateProjectSnowflakeMeta extends \Google\Protobuf\Internal\Message
{
    /**
     * Snowflake storage integration name used for project stage
     *
     * Generated from protobuf field <code>string storageIntegrationName = 1;</code>
     */
    protected $storageIntegrationName = '';
    /**
     * Snowflake login type for newly created project user
     *
     * Generated from protobuf field <code>string projectUserLoginType = 2;</code>
     */
    protected $projectUserLoginType = '';
    /**
     * RSA public key part of key pair for newly created project user
     *
     * Generated from protobuf field <code>string projectUserPublicKey = 3;</code>
     */
    protected $projectUserPublicKey = '';
    /**
     * if true, dynamic backend warehouses grans will be setup
     *
     * Generated from protobuf field <code>bool setupDynamicBackends = 4;</code>
     */
    protected $setupDynamicBackends = false;
    /**
     * default warehouse which will be granted to project user
     *
     * Generated from protobuf field <code>string defaultWarehouseToGrant = 5;</code>
     */
    protected $defaultWarehouseToGrant = '';
    /**
     * list of additional warehouses which will be granted to project user
     *
     * Generated from protobuf field <code>repeated string additionalWarehousesToGrant = 6;</code>
     */
    private $additionalWarehousesToGrant;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $storageIntegrationName
     *           Snowflake storage integration name used for project stage
     *     @type string $projectUserLoginType
     *           Snowflake login type for newly created project user
     *     @type string $projectUserPublicKey
     *           RSA public key part of key pair for newly created project user
     *     @type bool $setupDynamicBackends
     *           if true, dynamic backend warehouses grans will be setup
     *     @type string $defaultWarehouseToGrant
     *           default warehouse which will be granted to project user
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $additionalWarehousesToGrant
     *           list of additional warehouses which will be granted to project user
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Project::initOnce();
        parent::__construct($data);
    }

    /**
     * Snowflake storage integration name used for project stage
     *
     * Generated from protobuf field <code>string storageIntegrationName = 1;</code>
     * @return string
     */
    public function getStorageIntegrationName()
    {
        return $this->storageIntegrationName;
    }

    /**
     * Snowflake storage integration name used for project stage
     *
     * Generated from protobuf field <code>string storageIntegrationName = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setStorageIntegrationName($var)
    {
        GPBUtil::checkString($var, True);
        $this->storageIntegrationName = $var;

        return $this;
    }

    /**
     * Snowflake login type for newly created project user
     *
     * Generated from protobuf field <code>string projectUserLoginType = 2;</code>
     * @return string
     */
    public function getProjectUserLoginType()
    {
        return $this->projectUserLoginType;
    }

    /**
     * Snowflake login type for newly created project user
     *
     * Generated from protobuf field <code>string projectUserLoginType = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectUserLoginType($var)
    {
        GPBUtil::checkString($var, True);
        $this->projectUserLoginType = $var;

        return $this;
    }

    /**
     * RSA public key part of key pair for newly created project user
     *
     * Generated from protobuf field <code>string projectUserPublicKey = 3;</code>
     * @return string
     */
    public function getProjectUserPublicKey()
    {
        return $this->projectUserPublicKey;
    }

    /**
     * RSA public key part of key pair for newly created project user
     *
     * Generated from protobuf field <code>string projectUserPublicKey = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectUserPublicKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->projectUserPublicKey = $var;

        return $this;
    }

    /**
     * if true, dynamic backend warehouses grans will be setup
     *
     * Generated from protobuf field <code>bool setupDynamicBackends = 4;</code>
     * @return bool
     */
    public function getSetupDynamicBackends()
    {
        return $this->setupDynamicBackends;
    }

    /**
     * if true, dynamic backend warehouses grans will be setup
     *
     * Generated from protobuf field <code>bool setupDynamicBackends = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setSetupDynamicBackends($var)
    {
        GPBUtil::checkBool($var);
        $this->setupDynamicBackends = $var;

        return $this;
    }

    /**
     * default warehouse which will be granted to project user
     *
     * Generated from protobuf field <code>string defaultWarehouseToGrant = 5;</code>
     * @return string
     */
    public function getDefaultWarehouseToGrant()
    {
        return $this->defaultWarehouseToGrant;
    }

    /**
     * default warehouse which will be granted to project user
     *
     * Generated from protobuf field <code>string defaultWarehouseToGrant = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setDefaultWarehouseToGrant($var)
    {
        GPBUtil::checkString($var, True);
        $this->defaultWarehouseToGrant = $var;

        return $this;
    }

    /**
     * list of additional warehouses which will be granted to project user
     *
     * Generated from protobuf field <code>repeated string additionalWarehousesToGrant = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAdditionalWarehousesToGrant()
    {
        return $this->additionalWarehousesToGrant;
    }

    /**
     * list of additional warehouses which will be granted to project user
     *
     * Generated from protobuf field <code>repeated string additionalWarehousesToGrant = 6;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAdditionalWarehousesToGrant($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->additionalWarehousesToGrant = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CreateProjectSnowflakeMeta::class, \Keboola\StorageDriver\Command\Project\CreateProjectCommand_CreateProjectSnowflakeMeta::class);

