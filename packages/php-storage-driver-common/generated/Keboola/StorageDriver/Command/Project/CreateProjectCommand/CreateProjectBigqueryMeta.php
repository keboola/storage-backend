<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/project.proto

namespace Keboola\StorageDriver\Command\Project\CreateProjectCommand;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * Bigquery backend metadata
 *
 * Generated from protobuf message <code>keboola.storageDriver.command.project.CreateProjectCommand.CreateProjectBigqueryMeta</code>
 */
class CreateProjectBigqueryMeta extends \Google\Protobuf\Internal\Message
{
    /**
     * file storage bucket in GCS, bigquery load from file doesn't support load with file credentials
     *
     * Generated from protobuf field <code>string gcsFileBucketName = 1;</code>
     */
    protected $gcsFileBucketName = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $gcsFileBucketName
     *           file storage bucket in GCS, bigquery load from file doesn't support load with file credentials
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Project::initOnce();
        parent::__construct($data);
    }

    /**
     * file storage bucket in GCS, bigquery load from file doesn't support load with file credentials
     *
     * Generated from protobuf field <code>string gcsFileBucketName = 1;</code>
     * @return string
     */
    public function getGcsFileBucketName()
    {
        return $this->gcsFileBucketName;
    }

    /**
     * file storage bucket in GCS, bigquery load from file doesn't support load with file credentials
     *
     * Generated from protobuf field <code>string gcsFileBucketName = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setGcsFileBucketName($var)
    {
        GPBUtil::checkString($var, True);
        $this->gcsFileBucketName = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CreateProjectBigqueryMeta::class, \Keboola\StorageDriver\Command\Project\CreateProjectCommand_CreateProjectBigqueryMeta::class);

