<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/table.proto

namespace Keboola\StorageDriver\Command\Table;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * Command is used when copying table into another table in same backend
 *
 * Generated from protobuf message <code>keboola.storageDriver.command.table.TableImportFromTableCommand</code>
 */
class TableImportFromTableCommand extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping source = 1;</code>
     */
    protected $source = null;
    /**
     **
     * Resulting table on the backend
     * Table must exists before import
     * All table properties are loaded from backend
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.Table destination = 2;</code>
     */
    protected $destination = null;
    /**
     **
     * Import options may vary based on backend
     * based on:
     * https://github.com/keboola/php-db-import-export/blob/master/src/ImportOptions.php
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.ImportOptions importOptions = 3;</code>
     */
    protected $importOptions = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping $source
     *     @type \Keboola\StorageDriver\Command\Table\ImportExportShared\Table $destination
     *          *
     *           Resulting table on the backend
     *           Table must exists before import
     *           All table properties are loaded from backend
     *     @type \Keboola\StorageDriver\Command\Table\ImportExportShared\ImportOptions $importOptions
     *          *
     *           Import options may vary based on backend
     *           based on:
     *           https://github.com/keboola/php-db-import-export/blob/master/src/ImportOptions.php
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Table::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping source = 1;</code>
     * @return \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping|null
     */
    public function getSource()
    {
        return $this->source;
    }

    public function hasSource()
    {
        return isset($this->source);
    }

    public function clearSource()
    {
        unset($this->source);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping source = 1;</code>
     * @param \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping::class);
        $this->source = $var;

        return $this;
    }

    /**
     **
     * Resulting table on the backend
     * Table must exists before import
     * All table properties are loaded from backend
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.Table destination = 2;</code>
     * @return \Keboola\StorageDriver\Command\Table\ImportExportShared\Table|null
     */
    public function getDestination()
    {
        return $this->destination;
    }

    public function hasDestination()
    {
        return isset($this->destination);
    }

    public function clearDestination()
    {
        unset($this->destination);
    }

    /**
     **
     * Resulting table on the backend
     * Table must exists before import
     * All table properties are loaded from backend
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.Table destination = 2;</code>
     * @param \Keboola\StorageDriver\Command\Table\ImportExportShared\Table $var
     * @return $this
     */
    public function setDestination($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Table\ImportExportShared\Table::class);
        $this->destination = $var;

        return $this;
    }

    /**
     **
     * Import options may vary based on backend
     * based on:
     * https://github.com/keboola/php-db-import-export/blob/master/src/ImportOptions.php
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.ImportOptions importOptions = 3;</code>
     * @return \Keboola\StorageDriver\Command\Table\ImportExportShared\ImportOptions|null
     */
    public function getImportOptions()
    {
        return $this->importOptions;
    }

    public function hasImportOptions()
    {
        return isset($this->importOptions);
    }

    public function clearImportOptions()
    {
        unset($this->importOptions);
    }

    /**
     **
     * Import options may vary based on backend
     * based on:
     * https://github.com/keboola/php-db-import-export/blob/master/src/ImportOptions.php
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.ImportOptions importOptions = 3;</code>
     * @param \Keboola\StorageDriver\Command\Table\ImportExportShared\ImportOptions $var
     * @return $this
     */
    public function setImportOptions($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Table\ImportExportShared\ImportOptions::class);
        $this->importOptions = $var;

        return $this;
    }

}

