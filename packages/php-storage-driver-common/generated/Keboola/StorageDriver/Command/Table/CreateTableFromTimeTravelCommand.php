<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: proto/table.proto

namespace Keboola\StorageDriver\Command\Table;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>keboola.storageDriver.command.table.CreateTableFromTimeTravelCommand</code>
 */
class CreateTableFromTimeTravelCommand extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.CreateTableFromTimeTravelCommand.SourceTableMapping source = 1;</code>
     */
    protected $source = null;
    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.Table destination = 2;</code>
     */
    protected $destination = null;
    /**
     * timestamp to which point we want to restore the table in time
     *
     * Generated from protobuf field <code>int64 timestamp = 3;</code>
     */
    protected $timestamp = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Keboola\StorageDriver\Command\Table\CreateTableFromTimeTravelCommand\SourceTableMapping $source
     *     @type \Keboola\StorageDriver\Command\Table\ImportExportShared\Table $destination
     *     @type int|string $timestamp
     *           timestamp to which point we want to restore the table in time
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Table::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.CreateTableFromTimeTravelCommand.SourceTableMapping source = 1;</code>
     * @return \Keboola\StorageDriver\Command\Table\CreateTableFromTimeTravelCommand\SourceTableMapping|null
     */
    public function getSource()
    {
        return $this->source;
    }

    public function hasSource()
    {
        return isset($this->source);
    }

    public function clearSource()
    {
        unset($this->source);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.CreateTableFromTimeTravelCommand.SourceTableMapping source = 1;</code>
     * @param \Keboola\StorageDriver\Command\Table\CreateTableFromTimeTravelCommand\SourceTableMapping $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Table\CreateTableFromTimeTravelCommand\SourceTableMapping::class);
        $this->source = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.Table destination = 2;</code>
     * @return \Keboola\StorageDriver\Command\Table\ImportExportShared\Table|null
     */
    public function getDestination()
    {
        return $this->destination;
    }

    public function hasDestination()
    {
        return isset($this->destination);
    }

    public function clearDestination()
    {
        unset($this->destination);
    }

    /**
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.ImportExportShared.Table destination = 2;</code>
     * @param \Keboola\StorageDriver\Command\Table\ImportExportShared\Table $var
     * @return $this
     */
    public function setDestination($var)
    {
        GPBUtil::checkMessage($var, \Keboola\StorageDriver\Command\Table\ImportExportShared\Table::class);
        $this->destination = $var;

        return $this;
    }

    /**
     * timestamp to which point we want to restore the table in time
     *
     * Generated from protobuf field <code>int64 timestamp = 3;</code>
     * @return int|string
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    /**
     * timestamp to which point we want to restore the table in time
     *
     * Generated from protobuf field <code>int64 timestamp = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkInt64($var);
        $this->timestamp = $var;

        return $this;
    }

}

