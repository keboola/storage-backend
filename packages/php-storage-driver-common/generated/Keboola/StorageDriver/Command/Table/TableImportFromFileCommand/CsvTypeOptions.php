<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/table.proto

namespace Keboola\StorageDriver\Command\Table\TableImportFromFileCommand;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * CSV file configuration based on:
 * https://github.com/keboola/php-db-import-export/blob/master/src/Storage/S3/SourceFile.php
 * And on:
 * https://github.com/keboola/php-csv-options
 * Options support can vary based on backend
 *
 * Generated from protobuf message <code>keboola.storageDriver.command.table.TableImportFromFileCommand.CsvTypeOptions</code>
 */
class CsvTypeOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * list of columns expected in csv file
     *
     * Generated from protobuf field <code>repeated string columnsNames = 1;</code>
     */
    private $columnsNames;
    /**
     * list of primary key columns
     *
     * Generated from protobuf field <code>repeated string primaryKeysNames = 2;</code>
     */
    private $primaryKeysNames;
    /**
     * One character that separate fields in file. Delimiter must be single character and cannot be empty
     *
     * Generated from protobuf field <code>string delimiter = 3;</code>
     */
    protected $delimiter = '';
    /**
     * Character used to enclose strings. Single quote character ('), or double quote character (")
     *
     * Generated from protobuf field <code>string enclosure = 4;</code>
     */
    protected $enclosure = '';
    /**
     * Single character string used as the escape character for unenclosed field values only
     *
     * Generated from protobuf field <code>string escapedBy = 5;</code>
     */
    protected $escapedBy = '';
    /**
     * csv source type
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromFileCommand.CsvTypeOptions.SourceType sourceType = 6;</code>
     */
    protected $sourceType = 0;
    /**
     * used compression in files
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromFileCommand.CsvTypeOptions.Compression compression = 7;</code>
     */
    protected $compression = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $columnsNames
     *           list of columns expected in csv file
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $primaryKeysNames
     *           list of primary key columns
     *     @type string $delimiter
     *           One character that separate fields in file. Delimiter must be single character and cannot be empty
     *     @type string $enclosure
     *           Character used to enclose strings. Single quote character ('), or double quote character (")
     *     @type string $escapedBy
     *           Single character string used as the escape character for unenclosed field values only
     *     @type int $sourceType
     *           csv source type
     *     @type int $compression
     *           used compression in files
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Table::initOnce();
        parent::__construct($data);
    }

    /**
     * list of columns expected in csv file
     *
     * Generated from protobuf field <code>repeated string columnsNames = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getColumnsNames()
    {
        return $this->columnsNames;
    }

    /**
     * list of columns expected in csv file
     *
     * Generated from protobuf field <code>repeated string columnsNames = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setColumnsNames($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->columnsNames = $arr;

        return $this;
    }

    /**
     * list of primary key columns
     *
     * Generated from protobuf field <code>repeated string primaryKeysNames = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPrimaryKeysNames()
    {
        return $this->primaryKeysNames;
    }

    /**
     * list of primary key columns
     *
     * Generated from protobuf field <code>repeated string primaryKeysNames = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPrimaryKeysNames($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->primaryKeysNames = $arr;

        return $this;
    }

    /**
     * One character that separate fields in file. Delimiter must be single character and cannot be empty
     *
     * Generated from protobuf field <code>string delimiter = 3;</code>
     * @return string
     */
    public function getDelimiter()
    {
        return $this->delimiter;
    }

    /**
     * One character that separate fields in file. Delimiter must be single character and cannot be empty
     *
     * Generated from protobuf field <code>string delimiter = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDelimiter($var)
    {
        GPBUtil::checkString($var, True);
        $this->delimiter = $var;

        return $this;
    }

    /**
     * Character used to enclose strings. Single quote character ('), or double quote character (")
     *
     * Generated from protobuf field <code>string enclosure = 4;</code>
     * @return string
     */
    public function getEnclosure()
    {
        return $this->enclosure;
    }

    /**
     * Character used to enclose strings. Single quote character ('), or double quote character (")
     *
     * Generated from protobuf field <code>string enclosure = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setEnclosure($var)
    {
        GPBUtil::checkString($var, True);
        $this->enclosure = $var;

        return $this;
    }

    /**
     * Single character string used as the escape character for unenclosed field values only
     *
     * Generated from protobuf field <code>string escapedBy = 5;</code>
     * @return string
     */
    public function getEscapedBy()
    {
        return $this->escapedBy;
    }

    /**
     * Single character string used as the escape character for unenclosed field values only
     *
     * Generated from protobuf field <code>string escapedBy = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setEscapedBy($var)
    {
        GPBUtil::checkString($var, True);
        $this->escapedBy = $var;

        return $this;
    }

    /**
     * csv source type
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromFileCommand.CsvTypeOptions.SourceType sourceType = 6;</code>
     * @return int
     */
    public function getSourceType()
    {
        return $this->sourceType;
    }

    /**
     * csv source type
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromFileCommand.CsvTypeOptions.SourceType sourceType = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setSourceType($var)
    {
        GPBUtil::checkEnum($var, \Keboola\StorageDriver\Command\Table\TableImportFromFileCommand\CsvTypeOptions\SourceType::class);
        $this->sourceType = $var;

        return $this;
    }

    /**
     * used compression in files
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromFileCommand.CsvTypeOptions.Compression compression = 7;</code>
     * @return int
     */
    public function getCompression()
    {
        return $this->compression;
    }

    /**
     * used compression in files
     *
     * Generated from protobuf field <code>.keboola.storageDriver.command.table.TableImportFromFileCommand.CsvTypeOptions.Compression compression = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setCompression($var)
    {
        GPBUtil::checkEnum($var, \Keboola\StorageDriver\Command\Table\TableImportFromFileCommand\CsvTypeOptions\Compression::class);
        $this->compression = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CsvTypeOptions::class, \Keboola\StorageDriver\Command\Table\TableImportFromFileCommand_CsvTypeOptions::class);

