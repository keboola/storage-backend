<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/table.proto

namespace Keboola\StorageDriver\Command\Table\ImportExportShared;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>keboola.storageDriver.command.table.ImportExportShared.ABSCredentials</code>
 */
class ABSCredentials extends \Google\Protobuf\Internal\Message
{
    /**
     * ABS account name
     *
     * Generated from protobuf field <code>string accountName = 1;</code>
     */
    protected $accountName = '';
    /**
     * preferred way of authorization is to use temporary SAS token
     *
     * Generated from protobuf field <code>string sasToken = 2;</code>
     */
    protected $sasToken = '';
    /**
     * use account key only if absolutely necessary
     *
     * Generated from protobuf field <code>string accountKey = 3;</code>
     */
    protected $accountKey = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $accountName
     *           ABS account name
     *     @type string $sasToken
     *           preferred way of authorization is to use temporary SAS token
     *     @type string $accountKey
     *           use account key only if absolutely necessary
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Table::initOnce();
        parent::__construct($data);
    }

    /**
     * ABS account name
     *
     * Generated from protobuf field <code>string accountName = 1;</code>
     * @return string
     */
    public function getAccountName()
    {
        return $this->accountName;
    }

    /**
     * ABS account name
     *
     * Generated from protobuf field <code>string accountName = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAccountName($var)
    {
        GPBUtil::checkString($var, True);
        $this->accountName = $var;

        return $this;
    }

    /**
     * preferred way of authorization is to use temporary SAS token
     *
     * Generated from protobuf field <code>string sasToken = 2;</code>
     * @return string
     */
    public function getSasToken()
    {
        return $this->sasToken;
    }

    /**
     * preferred way of authorization is to use temporary SAS token
     *
     * Generated from protobuf field <code>string sasToken = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSasToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->sasToken = $var;

        return $this;
    }

    /**
     * use account key only if absolutely necessary
     *
     * Generated from protobuf field <code>string accountKey = 3;</code>
     * @return string
     */
    public function getAccountKey()
    {
        return $this->accountKey;
    }

    /**
     * use account key only if absolutely necessary
     *
     * Generated from protobuf field <code>string accountKey = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAccountKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->accountKey = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ABSCredentials::class, \Keboola\StorageDriver\Command\Table\ImportExportShared_ABSCredentials::class);

