<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/table.proto

namespace Keboola\StorageDriver\Command\Table\TableImportFromTableCommand;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * Source table input mapping
 *
 * Generated from protobuf message <code>keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping</code>
 */
class SourceTableMapping extends \Google\Protobuf\Internal\Message
{
    /**
     * path where table exists
     *
     * Generated from protobuf field <code>repeated string path = 1;</code>
     */
    private $path;
    /**
     * table name
     *
     * Generated from protobuf field <code>string tableName = 2;</code>
     */
    protected $tableName = '';
    /**
     * seconds filter, will limit based on timestamp column result
     *
     * Generated from protobuf field <code>int64 seconds = 3;</code>
     */
    protected $seconds = 0;
    /**
     * where causes
     *
     * Generated from protobuf field <code>repeated .keboola.storageDriver.command.table.ImportExportShared.TableWhereFilter whereFilters = 4;</code>
     */
    private $whereFilters;
    /**
     * limit number of records
     *
     * Generated from protobuf field <code>int64 limit = 5;</code>
     */
    protected $limit = 0;
    /**
     * column names mapping
     *
     * Generated from protobuf field <code>repeated .keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping.ColumnMapping columnMappings = 6;</code>
     */
    private $columnMappings;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $path
     *           path where table exists
     *     @type string $tableName
     *           table name
     *     @type int|string $seconds
     *           seconds filter, will limit based on timestamp column result
     *     @type \Keboola\StorageDriver\Command\Table\ImportExportShared\TableWhereFilter[]|\Google\Protobuf\Internal\RepeatedField $whereFilters
     *           where causes
     *     @type int|string $limit
     *           limit number of records
     *     @type \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping\ColumnMapping[]|\Google\Protobuf\Internal\RepeatedField $columnMappings
     *           column names mapping
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Table::initOnce();
        parent::__construct($data);
    }

    /**
     * path where table exists
     *
     * Generated from protobuf field <code>repeated string path = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * path where table exists
     *
     * Generated from protobuf field <code>repeated string path = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPath($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->path = $arr;

        return $this;
    }

    /**
     * table name
     *
     * Generated from protobuf field <code>string tableName = 2;</code>
     * @return string
     */
    public function getTableName()
    {
        return $this->tableName;
    }

    /**
     * table name
     *
     * Generated from protobuf field <code>string tableName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTableName($var)
    {
        GPBUtil::checkString($var, True);
        $this->tableName = $var;

        return $this;
    }

    /**
     * seconds filter, will limit based on timestamp column result
     *
     * Generated from protobuf field <code>int64 seconds = 3;</code>
     * @return int|string
     */
    public function getSeconds()
    {
        return $this->seconds;
    }

    /**
     * seconds filter, will limit based on timestamp column result
     *
     * Generated from protobuf field <code>int64 seconds = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSeconds($var)
    {
        GPBUtil::checkInt64($var);
        $this->seconds = $var;

        return $this;
    }

    /**
     * where causes
     *
     * Generated from protobuf field <code>repeated .keboola.storageDriver.command.table.ImportExportShared.TableWhereFilter whereFilters = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getWhereFilters()
    {
        return $this->whereFilters;
    }

    /**
     * where causes
     *
     * Generated from protobuf field <code>repeated .keboola.storageDriver.command.table.ImportExportShared.TableWhereFilter whereFilters = 4;</code>
     * @param \Keboola\StorageDriver\Command\Table\ImportExportShared\TableWhereFilter[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setWhereFilters($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Keboola\StorageDriver\Command\Table\ImportExportShared\TableWhereFilter::class);
        $this->whereFilters = $arr;

        return $this;
    }

    /**
     * limit number of records
     *
     * Generated from protobuf field <code>int64 limit = 5;</code>
     * @return int|string
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * limit number of records
     *
     * Generated from protobuf field <code>int64 limit = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkInt64($var);
        $this->limit = $var;

        return $this;
    }

    /**
     * column names mapping
     *
     * Generated from protobuf field <code>repeated .keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping.ColumnMapping columnMappings = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getColumnMappings()
    {
        return $this->columnMappings;
    }

    /**
     * column names mapping
     *
     * Generated from protobuf field <code>repeated .keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping.ColumnMapping columnMappings = 6;</code>
     * @param \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping\ColumnMapping[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setColumnMappings($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping\ColumnMapping::class);
        $this->columnMappings = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SourceTableMapping::class, \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand_SourceTableMapping::class);

