<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/table.proto

namespace Keboola\StorageDriver\Command\Table\TableImportFromTableCommand\SourceTableMapping;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>keboola.storageDriver.command.table.TableImportFromTableCommand.SourceTableMapping.ColumnMapping</code>
 */
class ColumnMapping extends \Google\Protobuf\Internal\Message
{
    /**
     * name of column in source table
     *
     * Generated from protobuf field <code>string sourceColumnName = 1;</code>
     */
    protected $sourceColumnName = '';
    /**
     * name of column in destination table
     *
     * Generated from protobuf field <code>string destinationColumnName = 2;</code>
     */
    protected $destinationColumnName = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $sourceColumnName
     *           name of column in source table
     *     @type string $destinationColumnName
     *           name of column in destination table
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Table::initOnce();
        parent::__construct($data);
    }

    /**
     * name of column in source table
     *
     * Generated from protobuf field <code>string sourceColumnName = 1;</code>
     * @return string
     */
    public function getSourceColumnName()
    {
        return $this->sourceColumnName;
    }

    /**
     * name of column in source table
     *
     * Generated from protobuf field <code>string sourceColumnName = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceColumnName($var)
    {
        GPBUtil::checkString($var, True);
        $this->sourceColumnName = $var;

        return $this;
    }

    /**
     * name of column in destination table
     *
     * Generated from protobuf field <code>string destinationColumnName = 2;</code>
     * @return string
     */
    public function getDestinationColumnName()
    {
        return $this->destinationColumnName;
    }

    /**
     * name of column in destination table
     *
     * Generated from protobuf field <code>string destinationColumnName = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDestinationColumnName($var)
    {
        GPBUtil::checkString($var, True);
        $this->destinationColumnName = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ColumnMapping::class, \Keboola\StorageDriver\Command\Table\TableImportFromTableCommand_SourceTableMapping_ColumnMapping::class);

